import matplotlib.pyplot as plt

# Aseguramos orden por agua para visual bonita (opcional pero recomendable)
df_plot = df_predictions_evaluation_.sort_values(by='water_ppm').reset_index(drop=True)

# Iniciamos doble eje
fig, ax1 = plt.subplots(figsize=(10, 6))

# Eje Y1 (izquierdo): age_hours
color1 = 'tab:blue'
ax1.set_xlabel('Water [ppm]')
ax1.set_ylabel('Age [hours]', color=color1)
ax1.plot(df_plot['water_ppm'], df_plot['age_hours'], color=color1, label='Age [hours]', linewidth=2)
ax1.tick_params(axis='y', labelcolor=color1)

# Creamos segundo eje Y (derecho): TAN_pred
ax2 = ax1.twinx()
color2 = 'tab:red'
ax2.set_ylabel('Predicted TAN', color=color2)
ax2.plot(df_plot['water_ppm'], df_plot['TAN_pred'], color=color2, label='TAN_pred', linewidth=2)
ax2.tick_params(axis='y', labelcolor=color2)

# Opcional: agregar unos puntos de agua como marcadores base visuales
ax1.scatter(df_plot['water_ppm'], [0]*len(df_plot), marker='|', color='gray', alpha=0.3)

# Título y leyenda
plt.title('Age vs Predicted TAN (ambos contra Water ppm)', fontsize=14)
fig.tight_layout()
plt.grid(True)
plt.show()



import matplotlib.pyplot as plt

# Ordenar por water si quieres más suavecito visual
df_plot = df_predictions_evaluation_.sort_values(by='water_ppm').reset_index(drop=True)

fig, ax1 = plt.subplots(figsize=(10, 6))

# Primer eje: WATER
ax1.set_xlabel('Observación (ordenada por agua)')
ax1.set_ylabel('Water [ppm]', color='skyblue')
ax1.plot(df_plot['water_ppm'], color='skyblue', linewidth=2, label='Water [ppm]')
ax1.tick_params(axis='y', labelcolor='skyblue')

# Segundo eje: TAN_pred
ax2 = ax1.twinx()
ax2.set_ylabel('Predicted TAN', color='crimson')
ax2.plot(df_plot['TAN_pred'], color='crimson', linewidth=2, label='TAN_pred')
ax2.tick_params(axis='y', labelcolor='crimson')

# Título y visual
plt.title('Comparación de Water vs TAN Predicho (doble eje)', fontsize=14)
fig.tight_layout()
plt.grid(True)
plt.show()