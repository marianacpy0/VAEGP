def evaluate(feature_extractor, label_predictor, test_loader):
    feature_extractor.eval()
    label_predictor.eval()
    all_preds = []

    with torch.no_grad():
        for data in test_loader:
            features = feature_extractor(data)
            preds = label_predictor(features)
            all_preds.append(preds)

    return torch.cat(all_preds, dim=0)

# Example test evaluation
test_dataset = TensorDataset(torch.tensor(X_test, dtype=torch.float32))  # Preprocessed test data
test_loader = DataLoader(test_dataset, batch_size=32)

predictions = evaluate(feature_extractor, label_predictor, test_loader)
