import cv2
import numpy as np
import matplotlib.pyplot as plt

# Load the image
image_path = "/mnt/data/186E69CF-DACC-4819-8CC0-69FCC3D9F852.jpeg"
image = cv2.imread(image_path)
height, width = image.shape[:2]

# Convert to grayscale
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# Adjust adaptive threshold parameters
adaptive_thresh = cv2.adaptiveThreshold(gray, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, 
                                        cv2.THRESH_BINARY_INV, 35, 15)

# Apply morphological closing
kernel = np.ones((20, 20), np.uint8)
morph = cv2.morphologyEx(adaptive_thresh, cv2.MORPH_CLOSE, kernel)

# Detect contours
contours, _ = cv2.findContours(morph, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

# Find the largest contour and adjust its bounding box to fit the green line region
largest_contour = max(contours, key=cv2.contourArea)
x, y, w, h = cv2.boundingRect(largest_contour)

# Adjust bounding box to match the green line, based on image analysis
# Here, we assume we know the relative positioning and modify accordingly.
top_y = y + int(h * 0.05)  # Adjusted to match the top green line
left_x = x + int(w * 0.02)  # Small adjustment for left green line
right_x = x + w - int(w * 0.02)  # Small adjustment for right green line
bottom_y = y + h - int(h * 0.1)  # Lower adjustment if needed

# Draw the adjusted bounding box and the measurement lines
adjusted_image = image.copy()
cv2.rectangle(adjusted_image, (left_x, top_y), (right_x, bottom_y), (0, 255, 0), 2)  # Green box

# Draw the top green measurement line (55.58 mm)
cv2.line(adjusted_image, (left_x, top_y), (right_x, top_y), (0, 255, 0), 2)
cv2.putText(adjusted_image, "55.58 mm", (left_x + 20, top_y - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 255, 0), 2)

# Draw blue and red lines for the left and right borders
cv2.line(adjusted_image, (left_x, top_y), (left_x, bottom_y), (255, 0, 0), 3)  # Blue line (left)
cv2.putText(adjusted_image, "Blue Border", (left_x - 70, (top_y + bottom_y) // 2), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (255, 0, 0), 2)

cv2.line(adjusted_image, (right_x, top_y), (right_x, bottom_y), (0, 0, 255), 3)  # Red line (right)
cv2.putText(adjusted_image, "Red Border", (right_x + 10, (top_y + bottom_y) // 2), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 0, 255), 2)

# Display the final result with the bounding box and measurement lines
plt.imshow(cv2.cvtColor(adjusted_image, cv2.COLOR_BGR2RGB))
plt.title("Adjusted Bounding Box with Measurement Lines")
plt.show()